<?php
// $Id$

/**
 *
 * This module overrides Drupal's handling of password requests.
 * To improve security, incorrect emails or usernames are treated
 * the same as valid ones so that malicious users cannot guess
 * credentials.
 *
 */

function password_recovery_form_user_pass_alter(&$form, &$form_state) {
  // Add your own function to the array of validation callbacks
  $form['actions']['submit']['#validate'][] = 'password_recovery_user_pass_validate';
  $form['actions']['submit']['#value'] = t('Send request');
  $form['#submit'][] = 'password_recovery_pass_submit';
}

/**
 * Override successful submission destination so it looks the same.
 */

function password_recovery_pass_submit($form, &$form_state) {
  global $language;

  $account = $form_state['values']['account'];
  // Mail one time login URL and instructions using current language.
  $mail = _user_mail_notify('password_reset', $account, $language);
  if (!empty($mail)) {
    watchdog('user', 'Password reset instructions mailed to %name at %email.', array('%name' => $account->name, '%email' => $account->mail));
  }

  $form_state['redirect'] = 'user/notice';
  return;
}

/**
 * Create page to redirect all users to after password request.
 */

function password_recovery_menu() {
     $items['user/notice'] = array(
          'title' => 'Password Request Notice',
          'page callback' => 'password_notice_page_contents',
          'access arguments' => array('access notification'),
          'type' => MENU_NORMAL_ITEM
     );
     return $items;
}

function password_notice_page_contents() {
     return t('<p>If you entered a valid email or username, you will receive an email shortly that will contain instructions on how to reset your password. You may also return to the <a href="/user">login page</a>.</p>');
}

/**
 * Perform validation. This is modified from user_pass_validate in core.
 */

function password_recovery_user_pass_validate($form, &$form_state) {
  $name = trim($form_state['values']['name']);
  // Try to load by email.
  $users = user_load_multiple(array(), array('mail' => $name, 'status' => '1'));
  $account = reset($users);
  if (!$account) {
    // No success, try to load by name.
    $users = user_load_multiple(array(), array('name' => $name, 'status' => '1'));
    $account = reset($users);
  }
  if (isset($account->uid)) {
    form_set_value(array('#parents' => array('account')), $account, $form_state);
  }
  else {
    $form_state['redirect'] = 'user/notice';
    return;
  }
}

/**
 * Add permissions. You'll need to assign permissions so users can access
 * message. This is because anonymous users have no permissions on site.
 */

function password_recovery_permission() {
  return array(
    'access notification' => array(
      'title' => t('Access password recovery notification'),
      'description' => t('Allows users to access the generic notification message on password recovery.'),
    ),
  );
}
